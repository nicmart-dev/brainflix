@use "./variables" as *;

/* -------------------------------------------------------------------------- */
/*                                Media queries                               */
/* -------------------------------------------------------------------------- */

@mixin tablet {
  @media screen and (min-width: $tablet-breakpoint) {
    @content;
  }
}

@mixin desktop {
  @media screen and (min-width: $desktop-breakpoint) {
    @content;
  }
}

@mixin mobile {
  @media screen and (max-width: #{$tablet-breakpoint - 1}) {
    @content;
  }
}

/* -------------------------------------------------------------------------- */
/*                                   Padding                                  */
/* -------------------------------------------------------------------------- */

//use to insert padding for entire app
@mixin spacing-app($component: "") {
  // don't add spacing on mobile if video player
  @if $component != video-player {
    @include spacing(padding, sides, $page-padding);
  }

  @include tablet {
    @include spacing(padding, sides, $page-padding-tablet);
  }
  @include desktop {
    @include spacing(padding, sides, $page-padding-desktop);

    //add additional spacing for video player on desktop only
    @if $component == video-player {
      @include spacing(padding, sides, $video-player-padding-desktop);
    }
  }
}

//use to insert spacing between components
@mixin spacing-between-components($direction: bottom, $type: padding) {
  @include spacing($type, $direction, $padding-between-components);

  @include tablet {
    @include spacing($type, $direction, $padding-between-components-tablet);
  }
}

//use to align video player control with page spacing
@mixin spacing-video-player-controls() {
  @include tablet {
    width: calc(100% - 2 * $video-player-padding-tablet);
    left: $video-player-padding-tablet;
    right: $video-player-padding-tablet;
  }
  @include desktop {
    width: calc(100% - 2 * $video-player-padding-desktop);
    left: $video-player-padding-desktop;
    right: $video-player-padding-desktop;
  }
}

/* Utility to to add margin padding, or border style, on which side, and how big
Expanded mixin created by https://codepen.io/ezos86/pen/QwQmZb */

@mixin spacing($type: margin, $direction: all, $amount: $padding-md) {
  @if $direction == all {
    #{$type}: $amount;
  } @else if $direction == top {
    #{$type}-top: $amount;
  } @else if $direction == topbottom {
    #{$type}-top: $amount;
    #{$type}-bottom: $amount;
  } @else if $direction == sides {
    #{$type}-left: $amount;
    #{$type}-right: $amount;
  } @else if $direction == left {
    #{$type}-left: $amount;
  } @else if $direction == right {
    #{$type}-right: $amount;
  } @else {
    #{$type}-bottom: $amount;
  }
}

/* -------------------------------------------------------------------------- */
/*                                   Divider                                  */
/* -------------------------------------------------------------------------- */

@mixin line-divider($direction: bottom) {
  border-width: 0; // reset before changing from mobile to tablet/desktop
  @include spacing(border, $direction, $divider-style);
}

/* -------------------------------------------------------------------------- */
/*                              Forms and tables                              */
/* -------------------------------------------------------------------------- */

//use to insert padding in form fields, per style guide
@mixin spacing-inside-fields {
  @include spacing(padding, all, $padding-sm);
  @include tablet {
    @include spacing(
      padding,
      topbottom,
      10px
    ); //keep mobile left padding but reduce top/bottom
  }
}

// use to show field validation outline and animation
@mixin field-error {
  outline: $form-field-error-border !important;
  animation: shakeItUp 0.25s !important;

  @keyframes shakeItUp {
    0% {
      transform: translateX(-10px);
    }

    50% {
      transform: translateX(10px);
    }

    100% {
      transform: translateX(0);
    }
  }
}
